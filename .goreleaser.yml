version: 2

before:
  hooks:
    - go mod tidy
    - go test ./...
    - make fmt
    - make lint || true  # Don't fail release for minor linting issues

builds:
  - skip: true  # This is a library, not a binary

archives:
  - format: tar.gz
    files:
      - README.md
      - docs/CHANGELOG.md
      - LICENSE
      - docs/PERFORMANCE.md
      - docs/**/*
      - examples/**/*
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^ci:'
      - '^build:'
      - merge conflict
      - Merge pull request

release:
  github:
    owner: garyblankenship
    name: wormhole
  
  draft: false
  prerelease: auto
  mode: append
  
  header: |
    # 🚀 Wormhole {{ .Tag }} - Ultra-Fast LLM SDK
    
    **The fastest Go SDK for LLM integration with sub-microsecond performance**
    
    ## 🏆 Performance Highlights
    - **67 nanoseconds** core overhead (165x faster than competitors)
    - **Linear scaling** under concurrent load
    - **Minimal memory allocations** (256-272 B/op average)
    
    ## 🌐 Multi-Provider Support
    - **6+ LLM Providers**: OpenAI, Anthropic, Gemini, Groq, Mistral, Ollama
    - **Universal Compatibility**: LMStudio, vLLM, FastChat, and any OpenAI-compatible API
    - **Production Middleware**: Circuit breakers, rate limiting, retry logic, metrics
    
    ## ⚡ Key Features
    - Laravel-inspired SimpleFactory design
    - Native Go streaming with channels
    - Comprehensive tool/function calling
    - Structured output with JSON schema validation
    - Advanced middleware stack for enterprise reliability
  
  footer: |
    ## 📦 Installation
    ```bash
    go get github.com/garyblankenship/wormhole@{{ .Tag }}
    ```
    
    ## 🚀 Quick Start
    ```go
    client := wormhole.SimpleFactory().
        WithOpenAI("your-api-key").
        Build()
    
    response, err := client.Text().
        Model("gpt-5").
        Prompt("Hello, Wormhole!").
        Generate(context.Background())
    ```
    
    ## 📚 Resources
    - [📖 **Documentation**](https://pkg.go.dev/github.com/garyblankenship/wormhole@{{ .Tag }})
    - [⚡ **Performance Guide**](https://github.com/garyblankenship/wormhole/blob/{{ .Tag }}/docs/PERFORMANCE.md)
    - [🚀 **Examples**](https://github.com/garyblankenship/wormhole/tree/{{ .Tag }}/examples)
    - [📋 **Changelog**](https://github.com/garyblankenship/wormhole/blob/{{ .Tag }}/docs/CHANGELOG.md)
    
    ## 🆚 Performance Comparison
    | SDK | Core Latency | Memory Usage | Providers |
    |-----|--------------|--------------|-----------|
    | **Wormhole** | **67 ns** | **256 B/op** | **6+** |
    | Competitor A | 11,000 ns | Not disclosed | 3-4 |
    | Competitor B | Not disclosed | Not disclosed | 2-3 |
    
    **Experience the difference - 165x faster than industry standard!** 🚀

env:
  - GO111MODULE=on

git:
  ignore_tags:
    - "nightly"